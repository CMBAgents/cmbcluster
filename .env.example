# === CMB CLUSTER PRODUCTION CONFIGURATION ===
# Copy this file to .env and configure for your deployment
#
# PRODUCTION SECURITY WARNING:
# - Generate secure random secrets for production deployment
# - Never use development defaults in production
# - Store secrets securely and rotate regularly

# === GCP INFRASTRUCTURE ===
# These values are used by setup-cluster.sh and deploy.sh
PROJECT_ID=your-gcp-project-id
CLUSTER_NAME=cmbcluster
REGION=us-central1
ZONE=us-central1-a

# === NETWORKING & DNS ===
# The primary domain for Ingress and TLS.
# For local testing with nip.io, get the Ingress IP after running setup-cluster.sh
# and set DOMAIN to something like "cmbcluster.EXTERNAL_IP.nip.io"
DOMAIN=cmbcluster.example.com

# Full URLs passed to the backend application. Must be consistent with the DOMAIN.
API_URL=https://api.cmbcluster.example.com
FRONTEND_URL=https://cmbcluster.example.com

# === SSL & AUTHENTICATION ===
# IMPORTANT: A real email for Let's Encrypt SSL certificate expiry notifications.
LETSENCRYPT_EMAIL=your-email@example.com

# Google OAuth credentials from your GCP project.
# Get these from Google Cloud Console > APIs & Services > Credentials
GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-client-secret

# === BACKEND SECURITY CONFIGURATION ===
# JWT secret key for token signing (CRITICAL - generate with: openssl rand -hex 32)
# If left blank, deploy.sh will generate one automatically.
SECRET_KEY=

# NextAuth.js secret for session management (generate with: openssl rand -base64 32)
NEXTAUTH_SECRET=

# Environment files encryption key (generate with: openssl rand -base64 32)
# For production, use: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
FILE_ENCRYPTION_KEY=

# JWT configuration
JWT_ALGORITHM=HS256
TOKEN_EXPIRE_HOURS=8

# === PRODUCTION SECURITY SETTINGS ===
# Set to false for production deployment
DEV_MODE=false
DEBUG=false

# Security features (enable for production)
TLS_ENABLED=true
RATE_LIMIT_ENABLED=true
ENABLE_SECURITY_HEADERS=true
CSP_ENABLED=true

# === APPLICATION BEHAVIOR ===
# The Kubernetes namespace for all resources. Defaults to CLUSTER_NAME if not set.
NAMESPACE=cmbcluster

# User environment limits
MAX_INACTIVE_HOURS=4
MAX_USER_PODS=1

# Auto-shutdown settings for free tier
FREE_TIER_MAX_UPTIME_MINUTES=60
AUTO_SHUTDOWN_CHECK_INTERVAL_MINUTES=5

# === FRONTEND CONFIGURATION ===
# NextAuth configuration
NEXTAUTH_URL=https://cmbcluster.example.com
NEXT_PUBLIC_API_URL=https://api.cmbcluster.example.com

# Application branding
NEXT_PUBLIC_APP_TITLE=CMBAgent Cloud
NEXT_PUBLIC_APP_TAGLINE=Your gateway to autonomous research

# === OPTIONAL REDIS CONFIGURATION ===
# Uncomment for distributed rate limiting in cluster deployments
# REDIS_URL=redis://redis-service:6379
# REDIS_ENABLED=true

# === DEVELOPMENT OVERRIDES ===
# For local development, you can override production settings:
# DEV_MODE=true
# DEBUG=true
# TLS_ENABLED=false
# TOKEN_EXPIRE_HOURS=24

# === PRODUCTION DEPLOYMENT CHECKLIST ===
# Before deploying to production:
# 1. Generate secure SECRET_KEY: openssl rand -hex 32
# 2. Generate secure NEXTAUTH_SECRET: openssl rand -base64 32  
# 3. Generate secure FILE_ENCRYPTION_KEY: openssl rand -base64 32
# 4. Configure Google OAuth credentials in Google Cloud Console
# 5. Update PROJECT_ID with your actual GCP project
# 6. Update DOMAIN with your actual domain name
# 7. Update LETSENCRYPT_EMAIL with your email
# 8. Set DEV_MODE=false and DEBUG=false
# 9. Ensure TLS_ENABLED=true and all security features enabled
# 10. Test authentication flow in staging environment
# 11. Run deployment: ./scripts/deploy.sh
