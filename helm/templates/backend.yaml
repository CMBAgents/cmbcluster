apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cmbcluster.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmbcluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "cmbcluster.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "cmbcluster.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: {{ include "cmbcluster.fullname" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.global.projectId }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: PROJECT_ID
          value: "{{ .Values.global.projectId }}"
        - name: BASE_DOMAIN
          value: "{{ .Values.global.domain }}"
        - name: API_URL
          value: "https://api.{{ .Values.global.domain }}"
        - name: FRONTEND_URL
          value: "https://{{ .Values.global.domain }}"
        - name: NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: REGISTRY_URL
          value: "{{ .Values.global.imageRegistry }}/{{ .Values.global.projectId }}"
        - name: MAX_INACTIVE_HOURS
          value: "{{ .Values.backend.config.maxInactiveHours }}"
        - name: MAX_USER_PODS
          value: "{{ .Values.backend.config.maxUserPods }}"
        - name: TOKEN_EXPIRE_HOURS
          value: "{{ .Values.backend.config.tokenExpireHours }}"
        - name: DEV_MODE
          value: "{{ .Values.backend.config.devMode }}"
        - name: DEBUG
          value: "{{ .Values.backend.config.debug }}"
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "cmbcluster.fullname" . }}-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "cmbcluster.fullname" . }}-secrets
              key: google-client-secret
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "cmbcluster.fullname" . }}-secrets
              key: secret-key
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cmbcluster.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmbcluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
  - port: {{ .Values.backend.service.port }}
    targetPort: {{ .Values.backend.service.targetPort }}
    protocol: TCP
    name: http
  selector:
    {{- include "cmbcluster.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend
