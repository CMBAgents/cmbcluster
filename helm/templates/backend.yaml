apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cmbcluster.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmbcluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "cmbcluster.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "cmbcluster.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        # Mounts non-sensitive configuration from values passed by deploy.sh
        env:
        - name: PROJECT_ID
          value: {{ .Values.global.projectId | quote }}
        - name: API_URL
          value: {{ .Values.backend.config.apiUrl | quote }}
        - name: FRONTEND_URL
          value: {{ .Values.backend.config.frontendUrl | quote }}
        - name: NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: JWT_ALGORITHM
          value: {{ .Values.backend.config.jwtAlgorithm | quote }}
        - name: TOKEN_EXPIRE_HOURS
          value: {{ .Values.backend.config.tokenExpireHours | quote }}
        - name: MAX_INACTIVE_HOURS
          value: {{ .Values.backend.config.maxInactiveHours | quote }}
        - name: MAX_USER_PODS
          value: {{ .Values.backend.config.maxUserPods | quote }}
        - name: DEV_MODE
          value: {{ .Values.backend.config.devMode | quote }}
        - name: DEBUG
          value: {{ .Values.backend.config.debug | quote }}
        # Mounts sensitive values (SECRET_KEY, GOOGLE_CLIENT_ID, etc.)
        # from the Kubernetes secret created by deploy.sh.
        envFrom:
        - secretRef:
            name: {{ .Values.backend.secretName }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cmbcluster.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmbcluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
  - port: {{ .Values.backend.service.port }}
    # Reference the named port in the deployment for better maintainability
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "cmbcluster.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend
