apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cmbcluster.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmbcluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: 1  # Force single replica for SQLite database consistency
  selector:
    matchLabels:
      {{- include "cmbcluster.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "cmbcluster.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
      annotations:
        gke-gcsfuse/volumes: "true"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        # Mount the database storage via Cloud Storage FUSE CSI driver
        volumeMounts:
        - name: gcs-fuse-volume
          mountPath: /app/data
        - name: tmp-storage
          mountPath: /tmp
        # Mounts non-sensitive configuration from values passed by deploy.sh
        env:
        - name: PROJECT_ID
          value: {{ .Values.global.projectId | quote }}
        - name: API_URL
          value: "https://api.{{ .Values.ingress.baseDomain }}"
        - name: FRONTEND_URL
          value: "https://{{ .Values.ingress.baseDomain }}"
        - name: BASE_DOMAIN
          value: {{ .Values.ingress.baseDomain | quote }}
        - name: REGISTRY_URL
          value: {{ .Values.global.registryUrl | quote }}
        - name: NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: JWT_ALGORITHM
          value: {{ .Values.backend.config.jwtAlgorithm | quote }}
        - name: TOKEN_EXPIRE_HOURS
          value: {{ .Values.backend.config.tokenExpireHours | quote }}
        - name: MAX_INACTIVE_HOURS
          value: {{ .Values.backend.config.maxInactiveHours | quote }}
        - name: MAX_USER_PODS
          value: {{ .Values.backend.config.maxUserPods | quote }}
        - name: DEV_MODE
          value: {{ .Values.backend.config.devMode | quote }}
        - name: DEBUG
          value: {{ .Values.backend.config.debug | quote }}
        - name: USER_POD_SA_NAME
          value: {{ .Values.userEnvironment.serviceAccount.name | quote }}
        - name: DATABASE_PATH
          value: "/app/data/cmbcluster.db"
        - name: DATABASE_BUCKET
          value: "{{ .Values.global.projectId }}-{{ .Release.Name }}-db"
        # Enhanced security configuration
        - name: TLS_ENABLED
          value: {{ .Values.backend.config.tlsEnabled | default "true" | quote }}
        - name: RATE_LIMIT_ENABLED
          value: {{ .Values.backend.config.rateLimitEnabled | default "true" | quote }}
        - name: ENABLE_SECURITY_HEADERS
          value: {{ .Values.backend.config.enableSecurityHeaders | default "true" | quote }}
        - name: CSP_ENABLED
          value: {{ .Values.backend.config.cspEnabled | default "true" | quote }}
        {{- if .Values.backend.config.redisEnabled }}
        - name: REDIS_ENABLED
          value: {{ .Values.backend.config.redisEnabled | quote }}
        - name: REDIS_URL
          value: {{ .Values.backend.config.redisUrl | quote }}
        {{- end }}
        # Mounts sensitive values (SECRET_KEY, GOOGLE_CLIENT_ID, etc.)
        # from the Kubernetes secret created by deploy.sh.
        envFrom:
        - secretRef:
            name: {{ .Values.backend.secretName }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false  # Allow database writes
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      # Cloud Storage FUSE CSI volume for database storage
      - name: gcs-fuse-volume
        csi:
          driver: gcsfuse.csi.storage.gke.io
          volumeAttributes:
            bucketName: "{{ .Values.global.projectId }}-{{ .Release.Name }}-db"
            mountOptions: "implicit-dirs"
      - name: tmp-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cmbcluster.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cmbcluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
  - port: {{ .Values.backend.service.port }}
    # Reference the named port in the deployment for better maintainability
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "cmbcluster.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend
